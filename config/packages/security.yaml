security:
    encoders:
        App\Entity\User:
            algorithm: argon2i

    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        registration:
            pattern: ^/api/users
            stateless: true
            anonymous: true
            methods: [POST] # méthodes possibles avec ce firewall (la méthode GET est exclue, ainsi on ne peut récup la liste des utilisateur par exemple, par contre on peut poster)
        login:
            pattern:  ^/api/login
            stateless: true
            anonymous: true
            json_login:
                check_path:               /api/login_check
                success_handler:          lexik_jwt_authentication.handler.authentication_success
                failure_handler:          lexik_jwt_authentication.handler.authentication_failure
        api:
            pattern:   ^/api
            stateless: true
            anonymous: true
            guard:
                authenticators:
                    - lexik_jwt_authentication.jwt_token_authenticator
        main:
            anonymous: true
            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/api/login, roles: IS_AUTHENTICATED_ANONYMOUSLY } # cette url peut être utilisée sans être authentifié (sans être connecté)
        - { path: ^/api/customers, roles: IS_AUTHENTICATED_FULLY }   # cette url doit être authentifié (connecté)
        - { path: ^/api/invoices, roles: IS_AUTHENTICATED_FULLY }    # cette url doit être authentifié (connecté)
        - { path: ^/api/users, roles: IS_AUTHENTICATED_FULLY, methods: [GET, PUT, DELETE] } # cette url doit être authentifié (sauf pour les méthodes GET, PUT, et DELETE)
        # - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }
